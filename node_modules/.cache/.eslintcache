[{"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/index.js":"1","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/testFiles/reportWebVitals.js":"2","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/App.js":"3","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Navbar/Navbar.js":"4","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/listings.js":"5","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/MainPage/Main_Page.js":"6","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Profile/profile.js":"7","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/About Us/AboutUs.js":"8","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Footnote/footnote.js":"9","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/AddListing.js":"10","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/singleListingDisplay.js":"11","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/SingleListingDisplay.js":"12"},{"size":184,"mtime":1665341845297,"results":"13","hashOfConfig":"14"},{"size":362,"mtime":1663003026829,"results":"15","hashOfConfig":"14"},{"size":728,"mtime":1665344433093,"results":"16","hashOfConfig":"14"},{"size":987,"mtime":1665342454085,"results":"17","hashOfConfig":"14"},{"size":3099,"mtime":1665164412869,"results":"18","hashOfConfig":"14"},{"size":1479,"mtime":1664641595785,"results":"19","hashOfConfig":"14"},{"size":639,"mtime":1664896691680,"results":"20","hashOfConfig":"14"},{"size":2792,"mtime":1664901225043,"results":"21","hashOfConfig":"14"},{"size":465,"mtime":1664896691680,"results":"22","hashOfConfig":"14"},{"size":10975,"mtime":1665441191493,"results":"23","hashOfConfig":"14"},{"size":1108,"mtime":1665344415522,"results":"24","hashOfConfig":"14"},{"size":534,"mtime":1665380407696,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1wn0j4w",{"filePath":"29","messages":"30","suppressedMessages":"31","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"47","messages":"48","suppressedMessages":"49","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"50","messages":"51","suppressedMessages":"52","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"53","messages":"54","suppressedMessages":"55","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"43"},{"filePath":"56","messages":"57","suppressedMessages":"58","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","suppressedMessages":"62","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","suppressedMessages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/index.js",[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/testFiles/reportWebVitals.js",[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/App.js",["66"],[],"import React from 'react';\nimport Info from './Components/MainPage/Main_Page'\nimport Navbar from './Components/Navbar/Navbar';\nimport Profile from './Components/Profile/profile'\nimport AboutUs from \"./Components/About Us/AboutUs\";\nimport Footnote from \"./Components/Footnote/footnote\";\nimport AddListings from \"./Components/Listings/AddListing\";\nimport './CSS/App.css';\n\nclass App extends React.Component\n{\n    render()\n    {\n        return (\n            <>\n                <Navbar />\n                <br/>\n                <br/>\n                <Info/>\n                <AddListings/>\n                {/*<Profile/>*/}\n                <AboutUs/>\n                <Footnote/>\n            </>\n        );\n    }\n}\n\nexport default App;\n",[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Navbar/Navbar.js",[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/listings.js",[],[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/MainPage/Main_Page.js",[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Profile/profile.js",[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/About Us/AboutUs.js",[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Footnote/footnote.js",[],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/AddListing.js",["67","68","69"],[],"import '../../CSS/index.css'\nimport * as React from \"react\";\nimport SingleList from \"./SingleListingDisplay\";\nimport { PrimaryButton } from '@fluentui/react/lib/Button';\nimport { initializeApp } from \"firebase/app\";\nimport { getDatabase, ref, set, onValue } from \"firebase/database\";\nimport {TextField} from \"@fluentui/react\";\nimport { Stack, IStackProps } from '@fluentui/react/lib/Stack';\nimport { ScrollablePane, IScrollablePaneStyles } from '@fluentui/react/lib/ScrollablePane';\nimport {getTheme, mergeStyleSets} from \"@fluentui/react/lib/Styling\";\n\nconst firebaseConfig = {\n    apiKey: \"AIzaSyCxyu7ou0WSzQYk63StiYtCVG-XtUPpqNs\",\n    authDomain: \"offcampusatmac.firebaseapp.com\",\n    projectId: \"offcampusatmac\",\n    storageBucket: \"offcampusatmac.appspot.com\",\n    messagingSenderId: \"546109308935\",\n    appId: \"1:546109308935:web:a52c2ee6d7cc1bae822aa2\",\n    measurementId: \"G-7CFVGFQXE8\",\n    databaseURL: \"https://offcampusatmac-default-rtdb.firebaseio.com/\"\n};\n\n// Initialize Firebase\nconst app = initializeApp(firebaseConfig);\nconst database = getDatabase(app);\n\n\nconst columnProps: Partial<IStackProps> = {\n    tokens: { childrenGap: 15 },\n    styles: { root: { width: 300, marginLeft: '40%' } },\n};\n\n\nexport interface IScrollablePaneExampleItem {\n    address: string;\n    name: string;\n    rent: number;\n    email: string;\n}\nconst theme = getTheme();\nconst classNames = mergeStyleSets({\n    wrapper: {\n        height: '40vh',\n        position: 'relative',\n        maxHeight: 'inherit',\n    },\n    pane: {\n        maxWidth: 400,\n        border: '1px solid ' + theme.palette.neutralLight\n    },\n    textContent: {\n        padding: '15px 10px',\n    },\n});\n\nconst scrollablePaneStyles: Partial<IScrollablePaneStyles> = { root: classNames.pane };\n\nconst createContentArea = (item: IScrollablePaneExampleItem) => (\n    <div >\n        <div className={classNames.textContent} style={{backgroundColor: 'gray'}}>\n            <SingleList address={item.address} name={item.name} rent={item.rent} email={item.email}/>\n        </div>\n    </div>\n);\n\n\n// **************************************   This is where the class starts   *******************************************\nclass AddListings extends React.Component\n{\n    constructor() {\n        super();\n        this.state=\n        {\n            listings: [],\n            able: false\n        }\n    }\n\n    componentDidMount() {\n        this.readUserData()\n    }\n\n\n    readUserData = () =>\n    {\n\n        const listRef = ref(database, 'items');\n        let tempListings = []\n        onValue(listRef, (snapshot) => {\n            snapshot.forEach(function(childSnapshot)\n            {\n                tempListings.push(childSnapshot.val())\n            })\n        });\n        this.setState(prevState => ({\n            listings: [...prevState.listings, tempListings]\n        }))\n    }\n\n    writeUserData = () => {\n        if (!(document.getElementById(\"addressBox\").value === \"\") && !(document.getElementById(\"nameBox\").value === \"\") &&\n            !(document.getElementById(\"rentBox\").value === \"\") && !(document.getElementById(\"emailBox\").value === \"\"))\n        {\n            set(ref(database, 'items/' + document.getElementById(\"addressBox\").value), {\n                name: document.getElementById(\"nameBox\").value,\n                email: document.getElementById(\"emailBox\").value,\n                address: document.getElementById(\"addressBox\").value,\n                rent: document.getElementById(\"rentBox\").value\n            });\n            alert(\"Success! Please refresh page to see changes!\")\n        }\n    }\n\n    enable = () =>\n    {\n        this.readUserData();\n        this.setState(prevState => ({able: !prevState.able}));\n    }\n\n    render()\n    {\n        if(!this.state.able)\n        {\n            // *********************************************   BEFORE RE RENDER   **************************************\n             return (\n                 <>\n                     <div style={{position: 'relative'}}>\n                         <div style={{textAlign: 'center', paddingLeft: '10%', bottom: '35%', paddingRight: '10%'}}>\n                             <section id={\"listings\"}>\n                                 <h1 style={{\n                                     fontSize: '6vh',\n                                     fontFamily: 'Newslab, georgia, Bakersville',\n                                     color: '#000000'\n                                 }}>Available Listings</h1>\n                             </section>\n                             <PrimaryButton text=\"Show Listings\" onClick={this.enable} allowDisabledFocus/>\n                         </div>\n                     </div>\n\n                     <div className=\"separator\"/>\n\n                     <div style={{position: 'relative'}}>\n                         <div style={{textAlign: 'center', paddingLeft: '10%', bottom: '35%', paddingRight: '10%'}}>\n                             <section id={\"addListing\"}>\n                                 <h1 style={{fontSize: '6vh', fontFamily: 'Newslab, georgia, Bakersville', color: '#000000'}}>Add\n                                     a Listing</h1>\n                             </section>\n                         </div>\n                     </div>\n                     <Stack {...columnProps}>\n                         <TextField label=\"Name \" required id={\"nameBox\"} onGetErrorMessage={value => {\n                             if (value === '') {\n                                 return 'This field is required';\n                             }\n                         }}/>\n                         <TextField label=\"Listing Address\" required id={\"addressBox\"} onGetErrorMessage={value => {\n                             if (value === '') {\n                                 return 'This field is required';\n                             }\n                         }}/>\n                         <TextField label=\"Contact Email\" required mask=\"m\\ask: @macalester.edu\" id={\"emailBox\"}\n                                    onGetErrorMessage={value => {\n                                        if (value === '') {\n                                            return 'This field is required';\n                                        }\n                                    }}/>\n                         <TextField label=\"Rent\" required id={\"rentBox\"} onGetErrorMessage={value => {\n                             if (value === '') {\n                                 return 'This field is required';\n                             }\n                         }}/>\n                     </Stack>\n                     <br/>\n                     <PrimaryButton text=\"Add Listing\" onClick={this.writeUserData} style={{marginLeft: \"45%\"}} allowDisabledFocus/>\n\n                     <div className=\"separator\"/>\n                 </>\n             );\n            // *************************************   AFTER RE RENDER  ************************************************\n        }\n        else\n        {\n            return (\n                <>\n                    <div style={{position: 'relative'}}>\n                        <div style={{textAlign: 'center', paddingLeft: '10%', bottom: '35%', paddingRight: '10%'}}>\n                            <section id={\"listings\"}>\n                                <h1 style={{\n                                    fontSize: '6vh',\n                                    fontFamily: 'Newslab, georgia, Bakersville',\n                                    color: '#000000'\n                                }}>Available Listings</h1>\n                            </section>\n                            <PrimaryButton text=\"Hide Listings\" onClick={this.enable}  allowDisabledFocus/>\n                            <div >\n                                {/*<ScrollablePane scrollContainerFocus={true} scrollContainerAriaLabel=\"Sticky component example\" styles={scrollablePaneStyles}>*/}\n                                {/*    {this.state.listings.map(createContentArea)}*/}\n                                {/*</ScrollablePane>*/}\n                            </div>\n                        </div>\n                    </div>\n                    <ul>\n                        {this.state.listings[0].map((data) => (\n                            <li key={data.address}>\n                                <SingleList name={data.name} address={data.address} email={data.email} rent={data.rent}/>\n                            </li>\n                            ))}\n                    </ul>\n                    {/*<SingleList name={this.state.listings[0][1].name} rent={this.state.listings[0][0].rent} email={this.state.listings[0][0].email} address={this.state.listings[0][0].address}/>*/}\n                    {/*<SingleList name={this.state.listings[0][1].name} rent={this.state.listings[0][1].rent} email={this.state.listings[0][1].email} address={this.state.listings[0][1].address}/>*/}\n                    <div className=\"separator\"/>\n\n                    <div style={{position: 'relative'}}>\n                        <div style={{textAlign: 'center', paddingLeft: '10%', bottom: '35%', paddingRight: '10%'}}>\n                            <section id={\"addListing\"}>\n                                <h1 style={{fontSize: '6vh', fontFamily: 'Newslab, georgia, Bakersville', color: '#000000'}}>Add\n                                    a Listing</h1>\n                            </section>\n                        </div>\n                    </div>\n                    <Stack {...columnProps}>\n                        <TextField label=\"Name \" required id={\"nameBox\"} onGetErrorMessage={value => {\n                            if (value === '') {\n                                return 'This field is required';\n                            }\n                        }}/>\n                        <TextField label=\"Listing Address\" required id={\"addressBox\"} onGetErrorMessage={value => {\n                            if (value === '') {\n                                return 'This field is required';\n                            }\n                        }}/>\n                        <TextField label=\"Contact Email\" required mask=\"m\\ask: @macalester.edu\" id={\"emailBox\"}\n                                   onGetErrorMessage={value => {\n                                       if (value === '') {\n                                           return 'This field is required';\n                                       }\n                                   }}/>\n                        <TextField label=\"Rent\" required id={\"rentBox\"} onGetErrorMessage={value => {\n                            if (value === '') {\n                                return 'This field is required';\n                            }\n                        }}/>\n                    </Stack>\n                    <br/>\n                    <PrimaryButton text=\"Add Listing\" onClick={this.writeUserData} style={{marginLeft: \"45%\"}} allowDisabledFocus/>\n                    <div className=\"separator\"/>\n                </>\n            );\n        }\n    }\n}\n\nexport default AddListings;","/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/singleListingDisplay.js",["70"],[],"/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/src/Components/Listings/SingleListingDisplay.js",[],[],{"ruleId":"71","severity":1,"message":"72","line":4,"column":8,"nodeType":"73","messageId":"74","endLine":4,"endColumn":15},{"ruleId":"71","severity":1,"message":"75","line":9,"column":10,"nodeType":"73","messageId":"74","endLine":9,"endColumn":24},{"ruleId":"71","severity":1,"message":"76","line":56,"column":7,"nodeType":"73","messageId":"74","endLine":56,"endColumn":59},{"ruleId":"71","severity":1,"message":"77","line":58,"column":7,"nodeType":"73","messageId":"74","endLine":58,"endColumn":24},{"ruleId":"71","severity":1,"message":"78","line":19,"column":7,"nodeType":"73","messageId":"74","endLine":19,"endColumn":15},"no-unused-vars","'Profile' is defined but never used.","Identifier","unusedVar","'ScrollablePane' is defined but never used.","'scrollablePaneStyles' is assigned a value but never used.","'createContentArea' is assigned a value but never used.","'database' is assigned a value but never used."]