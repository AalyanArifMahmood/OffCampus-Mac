{"ast":null,"code":"import { __assign } from \"tslib\";\nimport * as React from 'react';\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nvar getClassNames = classNamesFunction();\n/**\n * {@docCategory TagPicker}\n */\n\nexport var TagItemBase = function (props) {\n  var theme = props.theme,\n      styles = props.styles,\n      selected = props.selected,\n      disabled = props.disabled,\n      enableTagFocusInDisabledPicker = props.enableTagFocusInDisabledPicker,\n      children = props.children,\n      className = props.className,\n      index = props.index,\n      onRemoveItem = props.onRemoveItem,\n      removeButtonAriaLabel = props.removeButtonAriaLabel,\n      _a = props.title,\n      title = _a === void 0 ? typeof props.children === 'string' ? props.children : props.item.name : _a,\n      removeButtonIconProps = props.removeButtonIconProps;\n  var buttonRef = React.createRef();\n\n  var handleClick = function () {\n    var _a;\n\n    (_a = buttonRef.current) === null || _a === void 0 ? void 0 : _a.focus();\n  };\n\n  var classNames = getClassNames(styles, {\n    theme: theme,\n    className: className,\n    selected: selected,\n    disabled: disabled\n  });\n  var itemId = useId();\n  var disabledAttrs = enableTagFocusInDisabledPicker ? {\n    'aria-disabled': disabled,\n    tabindex: 0\n  } : {\n    disabled: disabled\n  };\n  return React.createElement(\"div\", {\n    \"data-selection-index\": index,\n    className: classNames.root,\n    role: 'listitem',\n    key: index,\n    onClick: handleClick\n  }, React.createElement(\"span\", {\n    className: classNames.text,\n    title: title,\n    id: itemId + \"-text\"\n  }, children), React.createElement(IconButton, __assign({\n    componentRef: buttonRef,\n    id: itemId,\n    onClick: onRemoveItem\n  }, disabledAttrs, {\n    iconProps: removeButtonIconProps !== null && removeButtonIconProps !== void 0 ? removeButtonIconProps : {\n      iconName: 'Cancel'\n    },\n    styles: {\n      icon: {\n        fontSize: '12px'\n      }\n    },\n    className: classNames.close,\n    \"aria-labelledby\": itemId + \"-removeLabel \" + itemId + \"-text\"\n  })), React.createElement(\"span\", {\n    id: itemId + \"-removeLabel\",\n    hidden: true\n  }, removeButtonAriaLabel));\n};\nexport var TagItem = styled(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem'\n});","map":{"version":3,"mappings":"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","names":["React","styled","classNamesFunction","IconButton","getStyles","useId","getClassNames","TagItemBase","props","styles","selected","disabled","enableTagFocusInDisabledPicker","children","className","index","onRemoveItem","removeButtonAriaLabel","_a","title","item","name","removeButtonIconProps","buttonRef","createRef","handleClick","current","focus","classNames","theme","itemId","disabledAttrs","tabindex","root","role","key","onClick","text","id","__assign","componentRef","iconProps","iconName","icon","fontSize","close","hidden","TagItem","undefined","scope"],"sources":["/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/node_modules/@fluentui/react/lib/components/pickers/src/components/pickers/TagPicker/TagItem.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport { styled, classNamesFunction } from '../../../Utilities';\nimport { IconButton, IButton } from '../../../Button';\nimport { getStyles } from './TagItem.styles';\nimport { useId } from '@fluentui/react-hooks';\nimport type { ITagItemProps, ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst getClassNames = classNamesFunction<ITagItemStyleProps, ITagItemStyles>();\n\n/**\n * {@docCategory TagPicker}\n */\nexport const TagItemBase = (props: ITagItemProps) => {\n  const {\n    theme,\n    styles,\n    selected,\n    disabled,\n    enableTagFocusInDisabledPicker,\n    children,\n    className,\n    index,\n    onRemoveItem,\n    removeButtonAriaLabel,\n    title = typeof props.children === 'string' ? props.children : props.item.name,\n    removeButtonIconProps,\n  } = props;\n\n  const buttonRef = React.createRef<IButton>();\n\n  const handleClick: React.MouseEventHandler<HTMLDivElement> = () => {\n    buttonRef.current?.focus();\n  };\n\n  const classNames = getClassNames(styles, {\n    theme: theme!,\n    className,\n    selected,\n    disabled,\n  });\n\n  const itemId = useId();\n\n  const disabledAttrs = enableTagFocusInDisabledPicker\n    ? {\n        'aria-disabled': disabled,\n        tabindex: 0,\n      }\n    : {\n        disabled: disabled,\n      };\n\n  return (\n    <div data-selection-index={index} className={classNames.root} role={'listitem'} key={index} onClick={handleClick}>\n      <span className={classNames.text} title={title} id={`${itemId}-text`}>\n        {children}\n      </span>\n      <IconButton\n        componentRef={buttonRef}\n        id={itemId}\n        onClick={onRemoveItem}\n        {...disabledAttrs}\n        iconProps={removeButtonIconProps ?? { iconName: 'Cancel' }}\n        styles={{ icon: { fontSize: '12px' } }}\n        className={classNames.close}\n        aria-labelledby={`${itemId}-removeLabel ${itemId}-text`}\n      />\n      <span id={`${itemId}-removeLabel`} hidden>\n        {removeButtonAriaLabel}\n      </span>\n    </div>\n  );\n};\n\nexport const TagItem = styled<ITagItemProps, ITagItemStyleProps, ITagItemStyles>(TagItemBase, getStyles, undefined, {\n  scope: 'TagItem',\n});\n"]},"metadata":{},"sourceType":"module"}