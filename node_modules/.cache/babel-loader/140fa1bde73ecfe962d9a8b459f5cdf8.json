{"ast":null,"code":"import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nvar GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected'\n};\nvar TAG_HEIGHT = 26;\nexport function getStyles(props) {\n  var _a, _b, _c, _d, _e;\n\n  var className = props.className,\n      theme = props.theme,\n      selected = props.selected,\n      disabled = props.disabled;\n  var palette = theme.palette,\n      effects = theme.effects,\n      fonts = theme.fonts,\n      semanticColors = theme.semanticColors;\n  var classNames = getGlobalClassNames(GlobalClassNames, theme);\n  return {\n    root: [classNames.root, fonts.medium, getFocusStyle(theme), {\n      boxSizing: 'content-box',\n      flexShrink: '1',\n      margin: 2,\n      height: TAG_HEIGHT,\n      lineHeight: TAG_HEIGHT,\n      cursor: 'default',\n      userSelect: 'none',\n      display: 'flex',\n      flexWrap: 'nowrap',\n      maxWidth: 300,\n      minWidth: 0,\n      borderRadius: effects.roundedCorner2,\n      color: semanticColors.inputText,\n      background: palette.neutralLighter,\n      selectors: (_a = {\n        ':hover': [!disabled && !selected && {\n          color: palette.neutralDark,\n          background: palette.neutralLight,\n          selectors: {\n            '.ms-TagItem-close': {\n              color: palette.neutralPrimary\n            }\n          }\n        }, disabled && {\n          background: palette.neutralLighter\n        }]\n      }, _a[HighContrastSelector] = {\n        border: \"1px solid \" + (!selected ? 'WindowText' : 'WindowFrame')\n      }, _a)\n    }, disabled && {\n      selectors: (_b = {}, _b[HighContrastSelector] = {\n        borderColor: 'GrayText'\n      }, _b)\n    }, selected && !disabled && [classNames.isSelected, {\n      background: palette.themePrimary,\n      color: palette.white\n    }], className],\n    text: [classNames.text, {\n      overflow: 'hidden',\n      textOverflow: 'ellipsis',\n      whiteSpace: 'nowrap',\n      minWidth: 30,\n      margin: '0 8px'\n    }, disabled && {\n      selectors: (_c = {}, _c[HighContrastSelector] = {\n        color: 'GrayText'\n      }, _c)\n    }],\n    close: [classNames.close, getFocusStyle(theme, {\n      borderColor: 'transparent',\n      inset: 1,\n      outlineColor: palette.white\n    }), {\n      color: palette.neutralSecondary,\n      width: 30,\n      height: '100%',\n      flex: '0 0 auto',\n      borderRadius: getRTL(theme) ? effects.roundedCorner2 + \" 0 0 \" + effects.roundedCorner2 : \"0 \" + effects.roundedCorner2 + \" \" + effects.roundedCorner2 + \" 0\",\n      selectors: (_d = {\n        ':hover': {\n          background: palette.neutralQuaternaryAlt,\n          color: palette.neutralPrimary\n        }\n      }, _d[\".\" + classNames.isSelected + \" &, :focus\"] = {\n        color: palette.white,\n        background: palette.themePrimary\n      }, _d[':focus:hover'] = {\n        color: palette.white,\n        background: palette.themeDark\n      }, _d[':active'] = {\n        color: palette.white,\n        backgroundColor: palette.themeDark\n      }, _d)\n    }, disabled && {\n      selectors: (_e = {}, _e[\".\" + ButtonGlobalClassNames.msButtonIcon] = {\n        color: palette.neutralSecondary\n      }, _e)\n    }]\n  };\n}","map":{"version":3,"mappings":"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","names":["getGlobalClassNames","getFocusStyle","HighContrastSelector","ButtonGlobalClassNames","getRTL","GlobalClassNames","root","text","close","isSelected","TAG_HEIGHT","getStyles","props","theme","selected","disabled","effects","fonts","semanticColors","classNames","medium","boxSizing","flexShrink","margin","height","lineHeight","cursor","userSelect","display","flexWrap","maxWidth","minWidth","borderRadius","roundedCorner2","color","inputText","background","palette","neutralLighter","selectors","neutralDark","neutralLight","neutralPrimary","_a","border","_b","borderColor","themePrimary","white","className","overflow","textOverflow","whiteSpace","_c","inset","outlineColor","neutralSecondary","width","flex","neutralQuaternaryAlt","_d","themeDark","backgroundColor","_e","msButtonIcon"],"sources":["/Users/aalyanmahmood/Documents/GitHub/OffCampus-Mac/node_modules/@fluentui/react/lib/components/pickers/src/components/pickers/TagPicker/TagItem.styles.ts"],"sourcesContent":["import { getGlobalClassNames, getFocusStyle, HighContrastSelector } from '../../../Styling';\nimport { ButtonGlobalClassNames } from '../../Button/BaseButton.classNames';\nimport { getRTL } from '../../../Utilities';\nimport type { ITagItemStyleProps, ITagItemStyles } from './TagPicker.types';\n\nconst GlobalClassNames = {\n  root: 'ms-TagItem',\n  text: 'ms-TagItem-text',\n  close: 'ms-TagItem-close',\n  isSelected: 'is-selected',\n};\n\nconst TAG_HEIGHT = 26;\n\nexport function getStyles(props: ITagItemStyleProps): ITagItemStyles {\n  const { className, theme, selected, disabled } = props;\n\n  const { palette, effects, fonts, semanticColors } = theme;\n\n  const classNames = getGlobalClassNames(GlobalClassNames, theme);\n\n  return {\n    root: [\n      classNames.root,\n      fonts.medium,\n      getFocusStyle(theme),\n      {\n        boxSizing: 'content-box',\n        flexShrink: '1',\n        margin: 2,\n        height: TAG_HEIGHT,\n        lineHeight: TAG_HEIGHT,\n        cursor: 'default',\n        userSelect: 'none',\n        display: 'flex',\n        flexWrap: 'nowrap',\n        maxWidth: 300,\n        minWidth: 0, // needed to prevent long tags from overflowing container\n        borderRadius: effects.roundedCorner2,\n        color: semanticColors.inputText,\n        background: palette.neutralLighter,\n        selectors: {\n          ':hover': [\n            !disabled &&\n              !selected && {\n                color: palette.neutralDark,\n                background: palette.neutralLight,\n                selectors: {\n                  '.ms-TagItem-close': {\n                    color: palette.neutralPrimary,\n                  },\n                },\n              },\n            disabled && { background: palette.neutralLighter },\n          ],\n          [HighContrastSelector]: {\n            border: `1px solid ${!selected ? 'WindowText' : 'WindowFrame'}`,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            borderColor: 'GrayText',\n          },\n        },\n      },\n      selected &&\n        !disabled && [\n          classNames.isSelected,\n          {\n            background: palette.themePrimary,\n            color: palette.white,\n          },\n        ],\n      className,\n    ],\n    text: [\n      classNames.text,\n      {\n        overflow: 'hidden',\n        textOverflow: 'ellipsis',\n        whiteSpace: 'nowrap',\n        minWidth: 30,\n        margin: '0 8px',\n      },\n      disabled && {\n        selectors: {\n          [HighContrastSelector]: {\n            color: 'GrayText',\n          },\n        },\n      },\n    ],\n    close: [\n      classNames.close,\n      getFocusStyle(theme, { borderColor: 'transparent', inset: 1, outlineColor: palette.white }),\n      {\n        color: palette.neutralSecondary,\n        width: 30,\n        height: '100%',\n        flex: '0 0 auto',\n        borderRadius: getRTL(theme)\n          ? `${effects.roundedCorner2} 0 0 ${effects.roundedCorner2}`\n          : `0 ${effects.roundedCorner2} ${effects.roundedCorner2} 0`,\n        selectors: {\n          ':hover': {\n            background: palette.neutralQuaternaryAlt,\n            color: palette.neutralPrimary,\n          },\n          [`.${classNames.isSelected} &, :focus`]: {\n            color: palette.white,\n            background: palette.themePrimary,\n          },\n          ':focus:hover': {\n            color: palette.white,\n            background: palette.themeDark,\n          },\n          ':active': {\n            color: palette.white,\n            backgroundColor: palette.themeDark,\n          },\n        },\n      },\n      disabled && {\n        selectors: {\n          [`.${ButtonGlobalClassNames.msButtonIcon}`]: {\n            color: palette.neutralSecondary,\n          },\n        },\n      },\n    ],\n  };\n}\n"]},"metadata":{},"sourceType":"module"}